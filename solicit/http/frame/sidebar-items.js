initSidebarItems({"type":[["FrameHeader","An alias for the 4-tuple representing the components of each HTTP/2 frame header."],["FrameHeaderBuffer","An alias for the 9-byte buffer that each HTTP/2 frame header must be stored in."]],"struct":[["DataFrame","A struct representing the DATA frames of HTTP/2, as defined in the HTTP/2 spec, section 6.1."],["HeadersFrame","A struct representing the HEADERS frames of HTTP/2, as defined in the HTTP/2 spec, section 6.2."],["RawFrame","A struct that defines the format of the raw HTTP/2 frame, i.e. the frame as it is read from the wire."],["SettingsFrame","A struct representing the SETTINGS frames of HTTP/2, as defined in the HTTP/2 spec, section 6.5."],["StreamDependency","The struct represents the dependency information that can be attached to a stream and sent within a HEADERS frame (one with the Priority flag set)."]],"fn":[["pack_header","Constructs a buffer of 9 bytes that represents the given `FrameHeader`."],["unpack_header","Deconstructs a `FrameHeader` into its corresponding 4 components, represented as a 4-tuple: `(length, frame_type, flags, stream_id)`."]],"trait":[["Flag","A trait that all HTTP/2 frame header flags need to implement."],["Frame","A trait that all HTTP/2 frame structs need to implement."]],"enum":[["DataFlag","An enum representing the flags that a `DataFrame` can have. The integer representation associated to each variant is that flag's bitmask."],["HeadersFlag","An enum representing the flags that a `HeadersFrame` can have. The integer representation associated to each variant is that flag's bitmask."],["HttpSetting","An enum that lists all valid settings that can be sent in a SETTINGS frame."],["SettingsFlag","An enum representing the flags that a `SettingsFrame` can have. The integer representation associated to each variant is that flag's bitmask."]]});